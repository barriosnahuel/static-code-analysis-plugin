apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.gradle.plugin-publish'

if (version.endsWith('-SNAPSHOT')) {
    ext.nexusRepo = 'http://nexus.monits.com/content/repositories/oss-snapshots'
} else {
    ext.nexusRepo = 'http://nexus.monits.com/content/repositories/oss-releases'
}

ext.nexusUsername = hasProperty("nexusUsername") ? nexusUsername : ""
ext.nexusPassword = hasProperty("nexusPassword") ? nexusPassword : ""

// Generate sources
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// generate javadocs
task javadocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// To upload artifact to Nexus
uploadArchives {
    configuration = configurations.archives
    repositories {
        mavenDeployer {
            repository(url: project.ext.nexusRepo) {
                authentication(userName: project.ext.nexusUsername, password: project.ext.nexusPassword)
            }

            pom.project {
                name 'Static code analysis'
                packaging 'aar'
                description 'Extension gradle plugin for static code analysis'

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'jsotuyod'
                        name 'Juan Martin Sotuyo Dodero'
                        email 'jmsotuyo@monits.com'
                    }
                    developer {
                        id 'MartuPuri'
                        name 'Martin Purita'
                        email 'mpurita@monits.com'
                    }
                    developer {
                        id 'lbritez'
                        name 'Leandro Britez'
                        email 'lbritez@monits.com'
                    }
                    developer {
                        id 'jcnoriega'
                        name 'Jos√© Noriega'
                        email 'jcnoriega@monits.com'
                    }
                }
            }
        }
    }
}

// Upload to bintray
ext.bintrayUsername = hasProperty("bintrayUsername") ? bintrayUsername : ""
ext.bintrayApiKey = hasProperty("bintrayApiKey") ? bintrayApiKey : ""

bintray {
    user = project.ext.bintrayUsername
    key = project.ext.bintrayApiKey
    publish = true
    pkg {
        repo = 'monits-android'
        name = 'static-code-analysis-plugin'
        userOrg = 'monits'
        licenses = ['Apache-2.0']
        issueTrackerUrl = 'https://github.com/Monits/static-code-analysis-plugin/issues'
        vcsUrl = 'https://github.com/Monits/static-code-analysis-plugin.git'
        version {
            name = project.version
            desc = 'StaticCodeAnalysis plugin'
            released = new Date()
            vcsTag = project.version
        }
    }
    configurations = ['archives']
}

// Gradle plugin portal
pluginBundle {
    website = 'https://github.com/Monits/static-code-analysis-plugin'
    vcsUrl = 'https://github.com/Monits/static-code-analysis-plugin.git'
    description = 'Configures PMD, CPD, Checkstyle and Findbugs out of the box for Android and Java projects beyond defaults to improve performance and extensibility, while allowing to use remote (cacheable) configuration'
    tags = ['code quality', 'static analysis', 'java', 'android', 'findbugs', 'fb-contrib', 'pmd', 'cpd', 'checkstyle', 'linter']

    plugins {
        scaPlugin {
            id = 'com.monits.staticCodeAnalysis'
            displayName = 'Fast and easy Static Code Analysis for Java and Android'
        }
    }

    mavenCoordinates {
        groupId = 'com.monits'
        artifactId = 'static-code-analysis-plugin'
    }
}
